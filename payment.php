<?php
// Include the PayPal PHP SDK
require 'vendor/autoload.php';

// Set up the PayPal environment
$clientId = 'ATFQoqwrOtxMkz56vfhGoMTQveKDy5gVbLkpF9LmyPKfumiOyQS2F37M1XiBicvEzC3dbObw5Osdllki';
$clientSecret = 'EEKB7K_nlzWDDxlvvp6mwQC6YIw3gBOWgKRlVHOVbxC7kzKDk9BgVUxf-MsAzUo8ig-D7VKSqORYXdRn';

$environment = new \PayPal\Core\ProductionEnvironment($clientId, $clientSecret);
$client = new \PayPal\PayPalHttpClient($environment);

if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Capture form data
    $name = $_POST['name'];
    $email = $_POST['email'];
    // Capture other form fields

    // Token generated by PayPal
    $token = $_POST['paypalToken'];

    // Capture the total amount including GST
    $totalAmount = floatval($_POST['total-amount']);

    // Create a PayPal payment
    $request = new \PayPalCheckoutSdk\Orders\OrdersCreateRequest();
    $request->prefer('return=representation');
    $request->body = [
        'intent' => 'CAPTURE',
        'purchase_units' => [
            [
                'amount' => [
                    'currency_code' => 'AUD',
                    'value' => $totalAmount,
                ],
            ],
        ],
    ];

    try {
        // Call PayPal to set up a transaction
        $response = $client->execute($request);

        // Check if the payment status is approved
        if ($response->result->status === 'COMPLETED') {
            // Payment was successful
            // You can store booking details and send a confirmation email here
            // Redirect to a thank you page
            header('Location: thank_you.php');
            exit;
        } else {
            // Payment failed
            header('Location: booking_page.php?error=Payment%20failed');
            exit;
        }
    } catch (\PayPalHttp\HttpException $e) {
        // Handle any exceptions
        // You can redirect back to the booking page with an error message
        header('Location: booking_page.php?error=' . urlencode($e->getMessage()));
        exit;
    }
}
?>
